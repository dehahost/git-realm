#!/bin/bash

##
# ____ _ ___    ____ ____ ____ _    _  _
# | __ |  |  __ |__/ |___ |__| |    |\/|
# |__] |  |     |  \ |___ |  | |___ |  |
#
VER="1.1.0"
# by dehahost
## 


## Constants
CURRENT=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
REALM_GENERATED_NAME=$(echo realm $(shuf -n 2 /usr/share/dict/cracklib-small) | sed -e 's/ /-/g' -e "s/'s//g")
REALM_BRANCHES=($(git branch | grep -oE "realm-.+$"))


## Functions
# - Tabbed echo
echot() { echo -e "\t$@"; }

realm-name() {
	echo ${1} | cut -d'-' -f2-
}

# - Realm branch matcher
match-branch() {
	for realm in ${REALM_BRANCHES[@]}; do
		[ "${1}" = "${realm}" ] && return 0
	done
	return 1
}


## Program section
# - Are we in a Git repo?
if [ "${CURRENT}" = "" ]; then
	echo "You are not in a Git repository."
	exit 1
fi

# - Let's realm!
case "${1}" in
   "enter")
		# - Enter a new realm or a existing one
		if [ "${2}" = "--master" ] && [ "${CURRENT}" != "master" ]; then
			# The --switch action
			echo "Switching to the master branch..."
			git checkout master
			shift
		fi

		# Match and use user typed realm name or use randomly generated one
		# This allows user to choose custom two worlded realm name
		if [ "${2}" != "" ] && [[ "${2}" =~ ^(realm-)?[a-z]+-[a-z]+$ ]]; then
			[[ "${2}" =~ ^realm- ]] && realm="${2}" || realm="realm-${2}"
			matched=$(match-branch "${realm}" && echo $?)
		else
			realm="${REALM_GENERATED_NAME}"
			# TODO: Echo about typed realm name is replaced with generated one, because is in wrong format...
		fi
		
		# Checkout existing realm branch or a new one
		if [ ! -z ${matched} ] && [ ${matched} -eq 0 ]; then
			echo "Entering realm called '$(realm-name ${realm})'..."
			git checkout ${realm}
		else 
			echo "Creating a new realm called '$(realm-name ${realm})'..."
			git checkout -b ${realm}
		fi
;; "leave")
		# - Only leave realm branch when user is currenly in it.
		if [[ "${CURRENT}" =~ ^realm-.*$ ]]; then
			echo "Leaving realm called '$(realm-name ${CURRENT})'..."
			git checkout master
		else
			echo "You are not in the realm."
		fi
;; "dispose")
		# - Delete the realm without any traces
		if [[ "${CURRENT}" =~ ^realm-.*$ ]]; then
			echo "Leaving and disposing currently used realm called '$(realm-name ${CURRENT})'..."
			realm=${CURRENT}
			git checkout -f master
			git branch -D ${realm}
		else
			echo "You are not in the realm."
		fi
;; "list")
		# - List realm branches
		echo "${REALM_BRANCHES[@]}" | sed -e 's/ /\n/g' -e 's/realm-//g'
;; "help")
		# - Man-like help
		echo  "git-realm - A precious Git branch extention."
		echo  "Version ${_version}; By dehahost"
		echo  ""
		echo  "SYNOPSIS"
		echot "git realm enter [--master] [realm-name]"
		echot "git realm (leave|dispose)"
		echot "git realm list"
		echot ""
		echo  ""
		echo  "DESCRIPTION"
		echot "A simple Git extention for entering and leaving coding realms in Git."
		echo  ""
		echo  "OPTIONS"
		echo  ""
		echot "dispose"
		echot "    Switches user to the master branch and deletes previously used realm. Any uncommited changes will be discarded!"
		echo  ""
		echot "enter"
		echot "    Checkout to the branch named 'realm' followed by two random words, the words are separated by a dash (ie. realm-octopus-retire)."
		echot "    New realm is based on currently active branch or realm."
		echo  ""
		echot "    [--master]"
		echot "        When it is used, new realm will be based on the master branch."
		echot "        Argument have to be typed after the 'enter' option."
		echo  ""
		echot "    [realm-name]"
		echot "        Allows to enter existing realms or create new ones with a custom name."
		echot "        Realm name must match following regex:"
		echo  ""
		echot "        ^(realm-)?[a-z]+-[a-z]+$"
		echo  ""
		echot "leave"
		echot "    Leaves active realm and returns to the master branch. This also applies to the nested realm as well."
		echo  ""
		echot "list"
		echot "    List all available realms in the current Git repository."
;;	*)
		echo "Wrong command. Type 'git realm help' for help."
esac
